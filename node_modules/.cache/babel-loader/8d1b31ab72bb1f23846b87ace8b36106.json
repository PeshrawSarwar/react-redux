{"ast":null,"code":"// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showNum: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggle(state) {\n      state.showNum = !state.showNum;\n    }\n\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: true\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport default store; // const counterReducer = (state = initialState, action) => {\n//   if (action.type === 'increment') {\n//     return {\n//       counter: state.counter + 1,\n//       showNum: state.showNum\n//     };\n//   }\n//   if (action.type === 'decrement') {\n//     return {\n//       counter: state.counter - 1,\n//       showNum: state.showNum\n//     };\n//   }\n//   if (action.type === 'increase') {\n//     return {\n//       counter: state.counter + action.amount,\n//       showNum: state.showNum\n//     };\n//   }\n//   if (action.type === 'toggle') {\n//     return {\n//       counter: state.counter,\n//       showNum: !state.showNum\n//     };\n//   }\n//   return state;\n// };","map":{"version":3,"sources":["C:/Users/Pesh4/Desktop/React Udemy/Redux/src/store/index.js"],"names":["createSlice","configureStore","initialCounterState","counter","showNum","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggle","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","auth","counterActions","actions"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,OAAO,EAAE;AAAvB,CAA5B;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAE,SADuB;AAE7BC,EAAAA,YAAY,EAACL,mBAFgB;AAG7BM,EAAAA,QAAQ,EAAC;AACLC,IAAAA,SAAS,CAACC,KAAD,EAAO;AACZA,MAAAA,KAAK,CAACP,OAAN;AACH,KAHI;;AAILQ,IAAAA,SAAS,CAACD,KAAD,EAAO;AACZA,MAAAA,KAAK,CAACP,OAAN;AACH,KANI;;AAOLS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAe;AACnBH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACH,KATI;;AAULC,IAAAA,MAAM,CAACL,KAAD,EAAO;AACTA,MAAAA,KAAK,CAACN,OAAN,GAAgB,CAACM,KAAK,CAACN,OAAvB;AACH;;AAZI;AAHoB,CAAD,CAAhC;AAmBA,MAAMY,gBAAgB,GAAG;AAAEC,EAAAA,eAAe,EAAC;AAAlB,CAAzB;AAEA,MAAMC,SAAS,GAAGlB,WAAW,CAAC;AAC1BM,EAAAA,IAAI,EAAC,MADqB;AAE1BC,EAAAA,YAAY,EAAES,gBAFY;AAG1BR,EAAAA,QAAQ,EAAC;AACLW,IAAAA,KAAK,CAACT,KAAD,EAAO;AACRA,MAAAA,KAAK,CAACO,eAAN,GAAwB,IAAxB;AACH,KAHI;;AAILG,IAAAA,MAAM,CAACV,KAAD,EAAO;AACTA,MAAAA,KAAK,CAACO,eAAN,GAAwB,KAAxB;AACH;;AANI;AAHiB,CAAD,CAA7B;AAeA,MAAMI,KAAK,GAAGpB,cAAc,CAAC;AACzBqB,EAAAA,OAAO,EAAE;AAACnB,IAAAA,OAAO,EAACE,YAAY,CAACiB,OAAtB;AAA+BC,IAAAA,IAAI,EAACL,SAAS,CAACI;AAA9C;AADgB,CAAD,CAA5B;AAIA,OAAO,MAAME,cAAc,GAAGnB,YAAY,CAACoB,OAApC;AAEP,eAAeJ,KAAf,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["// import { createStore } from 'redux';\r\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\nconst initialCounterState = { counter: 0, showNum: true };\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState:initialCounterState,\r\n    reducers:{\r\n        increment(state){\r\n            state.counter++;\r\n        },\r\n        decrement(state){\r\n            state.counter--;\r\n        },\r\n        increase(state, action){\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        toggle(state){\r\n            state.showNum = !state.showNum;\r\n        }\r\n    }\r\n})\r\n\r\nconst initialAuthState = { isAuthenticated:true };\r\n\r\nconst authSlice = createSlice({\r\n    name:'auth',\r\n    initialState: initialAuthState,\r\n    reducers:{\r\n        login(state){\r\n            state.isAuthenticated = true;\r\n        },\r\n        logout(state){\r\n            state.isAuthenticated = false;\r\n        }\r\n    }\r\n})\r\n\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {counter:counterSlice.reducer, auth:authSlice.reducer}\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default store;\r\n\r\n\r\n\r\n\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//   if (action.type === 'increment') {\r\n//     return {\r\n//       counter: state.counter + 1,\r\n//       showNum: state.showNum\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === 'decrement') {\r\n//     return {\r\n//       counter: state.counter - 1,\r\n//       showNum: state.showNum\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === 'increase') {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       showNum: state.showNum\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === 'toggle') {\r\n//     return {\r\n//       counter: state.counter,\r\n//       showNum: !state.showNum\r\n//     };\r\n//   }\r\n\r\n//   return state;\r\n// };"]},"metadata":{},"sourceType":"module"}